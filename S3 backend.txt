*What is state file? 
->It stores information about what resources Terraform has created.

*What is Remote backend?
->A remote backend stores the Terraform state file outside of your local file system and version control.

*Need of Remote Backend?
->This ensures that only one person can apply changes at a time, avoiding data corruption.
->provides a central location for storing and managing the Terraform state.
->helps to protect sensitive information within the state file.

1.Create an S3 Bucket:

********main.tf*****************
provider "aws" {
  region = "ap-southeast-1"
  profile = "user-tf"
  
}

resource "aws_instance" "vm" {

  instance_type = "t2.micro"
  ami = "ami-05caa5aa0186b660f" 
  subnet_id = "subnet-0f34db465a11f0d67" 
}

resource "aws_s3_bucket" "s3_bucket" {
  bucket = "abhipray-s3-demo-ind" # change this
}

resource "aws_dynamodb_table" "terraform_lock" {
  name           = "terraform-lock"
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = "LockID"

  attribute {
    name = "LockID"
    type = "S"
  }
} 

******************************************************************
2.Configure Remote Backend in Terraform:
*********backend.tf****************
terraform {
  backend "s3" {
    bucket         = "abhipray-s3-demo-ind" 
    key            = "s3backend\terraform.tfstate"
    region         = "ap-southeast-1"
    encrypt        = true
    dynamodb_table = "terraform-lock"
  }
} 
******************************************************************
3.Create a DynamoDB Table for State Locking:[optional]
aws dynamodb create-table --table-name your-dynamodb-table --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5

4. terraform init
5.terraform apply

